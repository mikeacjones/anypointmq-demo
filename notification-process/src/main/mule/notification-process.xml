<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:pushover="http://www.mulesoft.org/schema/mule/pushover" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/pushover http://www.mulesoft.org/schema/mule/pushover/current/mule-pushover.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	<flow name="notification-pushover-queue" doc:id="f7f7a1b9-a53a-431b-8e0a-c5ae66aac238" >
		<anypoint-mq:subscriber doc:name="Subscriber" doc:id="723b6044-b318-4fa6-9d61-2d64c9154da4" config-ref="Anypoint_MQ_Config" destination="notifications-pushover"/>
		<set-variable value="#[attributes.messageId]" doc:name="store messageId" doc:id="8d9b77a9-abfe-4341-913d-9afb43cb83a0" variableName="messageId"/>
		<choice doc:name="Choice" doc:id="dd2c6011-9ce1-4aa9-b3ad-b4f7f4ca5887" >
			<when expression='#[payload.priority != "Log"]'>
				<pushover:send-message doc:name="Send message" doc:id="873971ab-5a17-4597-80cf-d768514f3fa7" userToken="${secure::pushover.userToken}" message="#[payload.message]" title="Demo Notification" priority='#[if (payload.priority == "High") "HIGH_PRIORITY" else "NORMAL"]' config-ref="Pushover_Config" />
			</when>
		</choice>
		<vm:publish doc:name="mark pushover complete" doc:id="fe368293-bafc-462f-961e-2e730a99dab3" config-ref="VM_Config" queueName="notification-status">
			<vm:content ><![CDATA[#[vars.messageId]]]></vm:content>
		</vm:publish>
	</flow>
	<flow name="notification-log-queue" doc:id="f4a17acb-d7d4-46a5-bdd0-e01b6bb497e4" >
		<anypoint-mq:subscriber doc:name="Subscriber" doc:id="b634de26-8c6d-4b3f-9bc1-162999cbc36d" config-ref="Anypoint_MQ_Config" destination="notifications-log"/>
		<logger level="INFO" doc:name="Logger" doc:id="1567d484-f960-4a43-98c6-539c57be6ba9" message="#[payload]"/>
		<vm:publish doc:name="mark logging complete" doc:id="f0bb9350-2d68-4714-82db-798a22e3d41d" config-ref="VM_Config" queueName="notification-status">
			<vm:content ><![CDATA[#[attributes.messageId]]]></vm:content>
		</vm:publish>
	</flow>
	<flow name="notification-email-queue" doc:id="f1eef3f9-8cee-45ce-9567-0ca9d9ea90e1" >
		<anypoint-mq:subscriber doc:name="Subscriber" doc:id="5d07d50c-4ab4-4873-985c-d7338744ba2e" config-ref="Anypoint_MQ_Config" destination="notifications-email"/>
		<set-variable value="#[attributes.messageId]" doc:name="store messageId" doc:id="88415074-646b-4331-bc1e-8d5e3ff1dc2e" variableName="messageId" />
		<choice doc:name="choice" doc:id="11ae60da-edcc-4c6b-b686-7efeb8986b92">
			<when expression='#[payload.priority != "Log"]'>
				<ee:transform doc:name="get email recipients" doc:id="8b01565c-6ec2-41bf-a27f-53da4f3ec4b9">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="recipients"><![CDATA[%dw 2.0
output application/json

var groups = {
	"0": [],
	"1": [
		"mjones1@mulesoft.com",
		"croebuck@mulesoft.com",
		"dejim.juang@mulesoft.com"
	],
	"2": [
		"mjones1@mulesoft.com"
	]
}

---
groups[payload.groupId default 0] default []]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<choice doc:name="Choice" doc:id="ba35d2e8-0c77-4c8b-9e25-3ac353a415ef">
					<when expression="#[sizeOf(vars.recipients) &gt; 0]">
						<email:send doc:name="send notifications" doc:id="37e7daea-eb14-4d75-9f7d-ada0e81820c7" config-ref="Email_SMTP" toAddresses="#[vars.recipients]" subject='#["$(payload.priority) Priority Notification"]' fromAddress="notifications@kotrs.com">
						<email:body contentType="text/plain" contentTransferEncoding="BASE64">
							<email:content><![CDATA[#[payload.message]]]></email:content>
						</email:body>
					</email:send>
					</when>
				</choice>
			</when>
		</choice>
		<vm:publish queueName="notification-status" doc:name="mark email complete" doc:id="0f3440eb-ed98-44b6-b4a5-68cb0e1be20b" config-ref="VM_Config">
			<vm:content ><![CDATA[#[vars.messageId]]]></vm:content>
		</vm:publish>
	</flow>
	<flow name="notification-processFlow" doc:id="8977343c-96b5-40d4-838c-ea5a5ecef7e3" maxConcurrency="1">
		<vm:listener queueName="notification-status" doc:name="Listener" doc:id="4464c417-c7fd-4174-8c1b-b8d951852e03" config-ref="VM_Config" numberOfConsumers="1"/>
		<os:retrieve doc:name="get job status" doc:id="2f44adc8-c8f0-4cd9-9824-b01a18c281f8" key="#[payload]" objectStore="Object_store" target="processing" targetValue="#[(payload as Number) + 1]">
			<os:default-value ><![CDATA[0]]></os:default-value>
		</os:retrieve>
		<choice doc:name="Choice" doc:id="b3826a06-ec52-42b3-b821-c672a7eaf515" >
			<when expression="#[vars.processing &gt;= 3]">
				<mongo:update-documents collectionName="notifications" doc:name="update notification as complete" doc:id="8d08966a-3695-403a-ab82-7ab94f93e09f" config-ref="MongoDB_Config" target="updateResult">
					<mongo:find-query ><![CDATA[#[output application/json
---
{
	"_id": {
		"\$oid": payload
	}
}]]]></mongo:find-query>
					<mongo:content-to-update ><![CDATA[#[output application/json
---
{
	status: "complete"
}]]]></mongo:content-to-update>
				</mongo:update-documents>
				<os:remove doc:name="clear job status" doc:id="8a349b21-11e8-4e40-8f07-5a1919cb430d" key="#[payload]" objectStore="Object_store"/>
			</when>
			<otherwise >
				<os:store doc:name="store job status" doc:id="b861f669-63f0-47d9-80f0-925f81b401b8" key="#[payload]" objectStore="Object_store">
					<os:value ><![CDATA[#[vars.processing]]]></os:value>
				</os:store>
			</otherwise>
		</choice>
	</flow>
	<error-handler name="notification-processError_Handler" doc:id="f222120a-6718-4180-ad1e-68bce8bed9c3" >
		<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="f69d7763-e7bf-47f9-ac7e-0e86bc7ac966" >
			<mongo:update-documents doc:name="mark notification as failed" doc:id="76c13236-220d-419d-8d61-51fcfb5928f1" config-ref="MongoDB_Config" collectionName="notifications">
				<mongo:find-query ><![CDATA[#[output application/json
---
{
	"_id": {
		"\$oid": payload
	}
}]]]></mongo:find-query>
				<mongo:content-to-update ><![CDATA[#[output application/json
---
{
	status: "failed"
}]]]></mongo:content-to-update>
			</mongo:update-documents>
		</on-error-continue>
	</error-handler>
</mule>
